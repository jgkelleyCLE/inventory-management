// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  userId String @id
  name   String
  email  String
}

// model Products {
//   productId     String      @id
//   product       String
//   price         Float
//   stockQuantity Int
//   sales         Sales[]
//   Purchases     Purchases[]
// }

model Products {
  productId     Int         @id
  product       String
  price         Float
  size          Int?
  stockQuantity Int?
  reviews       Json[]      @default([])
  category      String
  tentType      String?
  image         String?
  schematic     String?
  parts         Parts[]
  tags          String?
  Sales         Sales[]
  Purchases     Purchases[]
}

model Parts {
  id          Int      @id @default(autoincrement())
  productId   Int
  quantity    String? // String because some quantities might be empty
  item        String?
  completed   Boolean  @default(false)
  completedBy String? // nullable for the null cases
  product     Products @relation(fields: [productId], references: [productId])
}

model Sales {
  saleId      String   @id
  productId   Int
  timestamp   DateTime
  quantity    Int
  totalAmount Float
  product     Products @relation(fields: [productId], references: [productId])
}

model Purchases {
  purchaseId String   @id
  productId  Int
  timestamp  DateTime
  quantity   Int
  unitCost   Float
  totalCost  Float
  product    Products @relation(fields: [productId], references: [productId])
}

model Expenses {
  expenseId String   @id
  category  String
  amount    Float
  timestamp DateTime
}

model SalesSummary {
  salesSummaryId   String   @id
  totalValue       Float
  changePercentage Float?
  date             DateTime
}

model PurchaseSummary {
  purchaseSummaryId String   @id
  totalPurchased    Float
  changePercentage  Float?
  date              DateTime
}

model ExpenseSummary {
  expenseSummaryId  String              @id
  totalExpenses     Float
  date              DateTime
  ExpenseByCategory ExpenseByCategory[]
}

model ExpenseByCategory {
  expenseByCategoryId String         @id
  expenseSummaryId    String
  category            String
  amount              BigInt
  date                DateTime
  expenseSummary      ExpenseSummary @relation(fields: [expenseSummaryId], references: [expenseSummaryId])
}
